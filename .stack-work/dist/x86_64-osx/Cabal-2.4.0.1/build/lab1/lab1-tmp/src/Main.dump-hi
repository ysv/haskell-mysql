
==================== FINAL INTERFACE ====================
2019-02-19 20:11:19.867767 UTC

interface main:Main 8063
  interface hash: 8abf5390265c77d0864676314711f281
  ABI hash: 480152f714f6bf61a95aea791618d722
  export-list hash: 09510d5713d6bca5170232315f72c847
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 507cdfaa7ebe97ae1ad6a2d1dfe8479d
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: array-0.5.3.0 base-4.12.0.0
                      base16-bytestring-0.1.1.6 base64-bytestring-1.0.0.2 basement-0.0.10
                      binary-0.8.6.0 binary-ieee754-0.1.0.0 binary-parsers-0.2.3.0
                      blaze-builder-0.4.1.0 blaze-textual-0.2.1.0 bytestring-0.10.8.2
                      bytestring-lexing-0.5.0.2 containers-0.6.0.1 cryptonite-0.25
                      deepseq-1.4.4.0 errors-2.3.0 exceptions-0.10.0 ghc-boot-th-8.6.3
                      ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 io-streams-1.5.1.0 memory-0.14.18
                      mtl-2.2.2 mysql-haskell-0.8.4.2 network-2.8.0.0 primitive-0.6.4.0
                      process-1.6.3.0 scientific-0.3.6.2 stm-2.5.0.0 tcp-streams-1.0.1.1
                      template-haskell-2.14.0.0 text-1.2.3.1 text-conversions-0.3.0
                      time-1.8.0.2 transformers-0.5.5.0 unix-2.7.2.2 vector-0.12.0.2
                      word24-2.0.1 zlib-0.6.2 zlib-bindings-0.1.1.5
orphans: basement-0.0.10:Basement.UArray.Base
         basement-0.0.10:Basement.Block time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.2:Data.Vector.Unboxed network-2.8.0.0:Network.Socket
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         basement-0.0.10:Basement.Block.Base
                         basement-0.0.10:Basement.Bounded basement-0.0.10:Basement.Monad
                         basement-0.0.10:Basement.MutableBuilder
                         basement-0.0.10:Basement.Nat basement-0.0.10:Basement.NonEmpty
                         basement-0.0.10:Basement.Numerical.Subtractive
                         basement-0.0.10:Basement.PrimType basement-0.0.10:Basement.String
                         basement-0.0.10:Basement.String.Encoding.ASCII7
                         basement-0.0.10:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.10:Basement.String.Encoding.UTF16
                         basement-0.0.10:Basement.String.Encoding.UTF32
                         basement-0.0.10:Basement.Types.OffsetSize
                         basement-0.0.10:Basement.UArray.Base
                         basement-0.0.10:Basement.UTF8.Base
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool
                         ghc-boot-th-8.6.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.3:GHC.LanguageExtensions.Type
                         mysql-haskell-0.8.4.2:Database.MySQL.Protocol.MySQLValue
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:Data.List ce2c69da408fdc014383cede9e1f9adf
import  -/  base-4.12.0.0:Data.OldList c2cab40fed7d27b5e717779f9a3c09ea
import  -/  base-4.12.0.0:Data.String 6cd1fdf32014f5e28378e591436070a4
import  -/  base-4.12.0.0:Data.Typeable d60ded6bb8a1ba55f31a64721dd22b1d
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:GHC.Num 847723f2584d989dac1eada133ac3fb8
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
import  -/  base-4.12.0.0:System.IO 7d8c7a747c93b42b043d691b66e1809e
import  -/  base-4.12.0.0:Text.Read e428ad664707f4e90693a55e6a6b4b1a
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 7f56f3d142debd8666df241a1ddc7887
import  -/  io-streams-1.5.1.0:System.IO.Streams 7e0c595b5477f3748c55c538719012d2
import  -/  io-streams-1.5.1.0:System.IO.Streams.Internal b85fc76b1244fb4701575e1a7895f1ac
import  -/  io-streams-1.5.1.0:System.IO.Streams.List 17360441f16aab279400899c5d858273
import  -/  mysql-haskell-0.8.4.2:Database.MySQL.Base bda42de3c2db91691685e590d1d8aed2
import  -/  mysql-haskell-0.8.4.2:Database.MySQL.Connection ded711b6b5e123f51202d165da27a658
import  -/  mysql-haskell-0.8.4.2:Database.MySQL.Protocol.ColumnDef a21e5b0b330c1b13ce9bf06dc4ee9839
import  -/  mysql-haskell-0.8.4.2:Database.MySQL.Protocol.MySQLValue b762983e5185053a8ec1f927e47815cd
import  -/  mysql-haskell-0.8.4.2:Database.MySQL.Protocol.Packet 3ac248ef2f3a96b810d8b155238f4212
import  -/  text-conversions-0.3.0:Data.Text.Conversions 2cdf776d975ee73aff6fa1175ce4723c
3fb605b48213c2fe6ed336a532cb3db6
  $fCreateTableName :: Main.Create Main.TableName
  DFunId
  {- Arity: 4,
     Strictness: <S,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fCreateTableName1
                  `cast`
                ((<Main.TableName>_R
                  ->_R <[[GHC.Types.Char]]>_R
                  ->_R <Database.MySQL.Connection.MySQLConn>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Database.MySQL.Protocol.Packet.OK>_R)) ; Sym (Main.N:Create[0]
                                                                                   <Main.TableName>_N)) -}
fa31791564365d5bb9a8fe9a26c8d9bc
  $fCreateTableName1 ::
    Main.TableName
    -> [[GHC.Types.Char]]
    -> Database.MySQL.Connection.MySQLConn
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.MySQL.Protocol.Packet.OK #)
  {- Arity: 4,
     Strictness: <S,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w72 :: Main.TableName)
                   (w73 :: [[GHC.Types.Char]])
                   (w74 :: Database.MySQL.Connection.MySQLConn)
                   (w75 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w74 of ww { Database.MySQL.Connection.MySQLConn ww1 ww2 ww3 ww4 ww5 ->
                 Main.$w$ccreateRow w72 w73 ww1 ww3 ww5 w75 }) -}
14a5f8b5d20530e6efa5e16065a795e1
  $fDeleteTableName :: Main.Delete Main.TableName
  DFunId
  {- Arity: 4,
     Strictness: <S,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fDeleteTableName1
                  `cast`
                ((<Main.TableName>_R
                  ->_R <[GHC.Types.Char]>_R
                  ->_R <Database.MySQL.Connection.MySQLConn>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Database.MySQL.Protocol.Packet.OK>_R)) ; Sym (Main.N:Delete[0]
                                                                                   <Main.TableName>_N)) -}
73eb388c2ad6068f4e8896f4ce05edfa
  $fDeleteTableName1 ::
    Main.TableName
    -> [GHC.Types.Char]
    -> Database.MySQL.Connection.MySQLConn
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.MySQL.Protocol.Packet.OK #)
  {- Arity: 4,
     Strictness: <S,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w72 :: Main.TableName)
                   (w73 :: [GHC.Types.Char])
                   (w74 :: Database.MySQL.Connection.MySQLConn)
                   (w75 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w74 of ww { Database.MySQL.Connection.MySQLConn ww1 ww2 ww3 ww4 ww5 ->
                 Main.$w$cdeleteRow w72 w73 ww1 ww3 ww5 w75 }) -}
f7b34e4af888952fee03805e99f9266f
  $fFindByIdTableName :: Main.FindById Main.TableName
  DFunId
  {- Arity: 4,
     Strictness: <S,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fFindByIdTableName1
                  `cast`
                ((<Main.TableName>_R
                  ->_R <[GHC.Types.Char]>_R
                  ->_R <Database.MySQL.Connection.MySQLConn>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <([Database.MySQL.Protocol.ColumnDef.ColumnDef],
                                  System.IO.Streams.Internal.InputStream
                                    [Database.MySQL.Protocol.MySQLValue.MySQLValue])>_R)) ; Sym (Main.N:FindById[0]
                                                                                                     <Main.TableName>_N)) -}
107cb30d0e245fe54ab7df5fdfc72dee
  $fFindByIdTableName1 ::
    Main.TableName
    -> [GHC.Types.Char]
    -> Database.MySQL.Connection.MySQLConn
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Database.MySQL.Protocol.ColumnDef.ColumnDef],
           System.IO.Streams.Internal.InputStream
             [Database.MySQL.Protocol.MySQLValue.MySQLValue]) #)
  {- Arity: 4,
     Strictness: <S,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (4, True, False)
                (\ (w72 :: Main.TableName)
                   (w73 :: [GHC.Types.Char])
                   (w74 :: Database.MySQL.Connection.MySQLConn)
                   (w75 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w74 of ww { Database.MySQL.Connection.MySQLConn ww1 ww2 ww3 ww4 ww5 ->
                 Main.$w$cfindById w72 w73 ww1 ww3 ww5 w75 }) -}
76ec48c2239fc128311c5097fff039b3
  $fListAllTableName :: Main.ListAll Main.TableName
  DFunId
  {- Arity: 3,
     Strictness: <S,1*U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fListAllTableName1
                  `cast`
                ((<Main.TableName>_R
                  ->_R <Database.MySQL.Connection.MySQLConn>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <([Database.MySQL.Protocol.ColumnDef.ColumnDef],
                                  System.IO.Streams.Internal.InputStream
                                    [Database.MySQL.Protocol.MySQLValue.MySQLValue])>_R)) ; Sym (Main.N:ListAll[0]
                                                                                                     <Main.TableName>_N)) -}
58146363f577f8f049bec81f3a1506ee
  $fListAllTableName1 ::
    Main.TableName
    -> Database.MySQL.Connection.MySQLConn
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Database.MySQL.Protocol.ColumnDef.ColumnDef],
           System.IO.Streams.Internal.InputStream
             [Database.MySQL.Protocol.MySQLValue.MySQLValue]) #)
  {- Arity: 3,
     Strictness: <S,1*U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w72 :: Main.TableName)
                   (w73 :: Database.MySQL.Connection.MySQLConn)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Database.MySQL.Connection.MySQLConn ww1 ww2 ww3 ww4 ww5 ->
                 Main.$w$clistAll w72 ww1 ww3 ww5 w74 }) -}
3e82e52be57bbf54ffed708a6b13bdd9
  $fListAllTableName10 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName11
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
00854e5699860fb04e445893e60852b2
  $fListAllTableName11 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step
                   @ r
                   Main.$fListAllTableName12
                   w72
                   ww1
                   ww2
                   w74 }) -}
148905c85577bdd377e34ee4c9318533
  $fListAllTableName12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName13) -}
5944e3f0cad24a6808f28e1bdc80d7b2
  $fListAllTableName13 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SELECT * FROM competition_schedules"#) -}
45f945f0e09b8c358530f11f8db0b88a
  $fListAllTableName14 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName15
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
bcfa0e95b797434ae901920636e4ca5d
  $fListAllTableName15 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step
                   @ r
                   Main.$fListAllTableName16
                   w72
                   ww1
                   ww2
                   w74 }) -}
48c394beba07f6a3c7ae2f70c978afae
  $fListAllTableName16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName17) -}
71f2aabfd4581726dc2cb68ff8af61a3
  $fListAllTableName17 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SELECT * FROM sport_section_schedules"#) -}
ceb8673ffa3cd3be4882ce8ba8daff06
  $fListAllTableName18 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName19
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
bc53e54d93a24fc5e0037e87c9e219d5
  $fListAllTableName19 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step
                   @ r
                   Main.$fListAllTableName20
                   w72
                   ww1
                   ww2
                   w74 }) -}
56c340f316340fad953688583ef8a985
  $fListAllTableName2 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName3
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
4e0e87209ceef344536d6f2ef7e5ad31
  $fListAllTableName20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName21) -}
992a8af49c232c99823cd1a00ee48319
  $fListAllTableName21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SELECT * FROM competitions"#) -}
d953a8bfd74c455005cce04cbaa99e56
  $fListAllTableName22 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName23
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
a7ca03cbb8ac6fdb7c3d764cd21ae1ab
  $fListAllTableName23 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step
                   @ r
                   Main.$fListAllTableName24
                   w72
                   ww1
                   ww2
                   w74 }) -}
ceb713b5e3f2a9fea793cfc07b02ab94
  $fListAllTableName24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName25) -}
c6504c3272cbc263d344308c553ea21b
  $fListAllTableName25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SELECT * FROM sport_sections"#) -}
654a6a7aaa2c5218260082b046f93f23
  $fListAllTableName26 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName27
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
be537739fc1706cdacf92710826539bd
  $fListAllTableName27 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step
                   @ r
                   Main.$fListAllTableName28
                   w72
                   ww1
                   ww2
                   w74 }) -}
f51c343ee687f5b30105961031a9585e
  $fListAllTableName28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName29) -}
1d856bcbfc407e0246f9d1cb447eb62c
  $fListAllTableName29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SELECT * FROM accounts"#) -}
ddd6e94969dd2108dbe61d08fec53bc5
  $fListAllTableName3 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step @ r Main.$fListAllTableName4 w72 ww1 ww2 w74 }) -}
ba2c6b064917c5d1402197d00675e07f
  $fListAllTableName4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName5) -}
ff12b251081c4f79ec81d2c86a9a4242
  $fListAllTableName5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SELECT * FROM participations"#) -}
9e7600fa2f3bb4357aff2fe3aacd81a2
  $fListAllTableName6 :: Data.ByteString.Lazy.Internal.ByteString
  {- Unfolding: (Data.ByteString.Builder.toLazyByteString
                   Main.$fListAllTableName7
                     `cast`
                   ((forall (r :: <*>_N).
                     <Data.ByteString.Builder.Internal.BufferRange
                      -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)>_R
                     ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Data.ByteString.Builder.Internal.BuildSignal
                                      r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) -}
e276307fc5ada4512d5e88915902b75c
  $fListAllTableName7 ::
    (Data.ByteString.Builder.Internal.BufferRange
     -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (w72 :: Data.ByteString.Builder.Internal.BufferRange
                           -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
                   (w73 :: Data.ByteString.Builder.Internal.BufferRange)
                   (w74 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w73 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 Main.$wpoly_step @ r Main.$fListAllTableName8 w72 ww1 ww2 w74 }) -}
04f807eac783d63b12a0b6fd7c05470b
  $fListAllTableName8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fListAllTableName9) -}
747ddc57286287fc83a73333d1c8f0db
  $fListAllTableName9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SELECT * FROM affiliations"#) -}
d54a5a58b1073989305b7110ecf9bc03
  $fUpdateTableName :: Main.Update Main.TableName
  DFunId
  {- Arity: 6,
     Strictness: <S,1*U><S,U><L,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fUpdateTableName1
                  `cast`
                ((<Main.TableName>_R
                  ->_R <[GHC.Types.Char]>_R
                  ->_R <[GHC.Types.Char]>_R
                  ->_R <[GHC.Types.Char]>_R
                  ->_R <Database.MySQL.Connection.MySQLConn>_R
                  ->_R Sym (GHC.Types.N:IO[0]
                                <Database.MySQL.Protocol.Packet.OK>_R)) ; Sym (Main.N:Update[0]
                                                                                   <Main.TableName>_N)) -}
a07e6187b418b4bdba272908f16c32b7
  $fUpdateTableName1 ::
    Main.TableName
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> Database.MySQL.Connection.MySQLConn
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.MySQL.Protocol.Packet.OK #)
  {- Arity: 6,
     Strictness: <S,1*U><S,U><L,1*U><L,U><S(LLC(C(S(SL)))LS),1*U(C(U(U,1*U)),A,C(C1(U(U,A))),A,U)><S,U>,
     Inline: [2],
     Unfolding: InlineRule (6, True, False)
                (\ (w72 :: Main.TableName)
                   (w73 :: [GHC.Types.Char])
                   (w74 :: [GHC.Types.Char])
                   (w75 :: [GHC.Types.Char])
                   (w76 :: Database.MySQL.Connection.MySQLConn)
                   (w77 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w76 of ww { Database.MySQL.Connection.MySQLConn ww1 ww2 ww3 ww4 ww5 ->
                 Main.$w$cupdateRow w72 w73 w74 w75 ww1 ww3 ww5 w77 }) -}
063399347c93928461a5f27b96ce17e9
  $tc'Accounts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9933101180863283910##
                   12265530469954025498##
                   Main.$trModule
                   Main.$tc'Accounts2
                   0#
                   Main.$tc'Accounts1) -}
75ef94c08f6a885e5109bb5fa697895b
  $tc'Accounts1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
68bd03f7015824d51c801180fe130fdf
  $tc'Accounts2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Accounts3) -}
073d3243d9c70d941e32a274a631206e
  $tc'Accounts3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Accounts"#) -}
c79e19aa54b9c10ebeebb604b01f18ac
  $tc'Affiliations :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11229071676405352622##
                   16537270704132252262##
                   Main.$trModule
                   Main.$tc'Affiliations1
                   0#
                   Main.$tc'Accounts1) -}
babb18ff247b546263bb7bc43af55f76
  $tc'Affiliations1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Affiliations2) -}
e8481cbe9ffe6987d5e39f8bb736a1e4
  $tc'Affiliations2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Affiliations"#) -}
7727af63f0fc18787623a8809481f135
  $tc'C:Create :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6590346967895920647##
                   7420050166960832385##
                   Main.$trModule
                   Main.$tc'C:Create2
                   1#
                   Main.$tc'C:Create1) -}
21a8b2d473ed946b50488c46ee2384cf
  $tc'C:Create1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
32dba53626f4b6b6b3392232e8cd9e39
  $tc'C:Create2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'C:Create3) -}
7736703b891f021723e1b654f84b1a76
  $tc'C:Create3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Create"#) -}
f4bc6b4d4530cd2f98a7df14e1db5434
  $tc'C:Delete :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16680999538203136548##
                   16960955815051970205##
                   Main.$trModule
                   Main.$tc'C:Delete2
                   1#
                   Main.$tc'C:Delete1) -}
1ae37e664de513a12f2c3829c075941a
  $tc'C:Delete1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a330b14ac6ba26ffb937e6fd6dbe4518
  $tc'C:Delete2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'C:Delete3) -}
33549250b787b5f585dad32db25ce109
  $tc'C:Delete3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Delete"#) -}
2071779553770c7e984cebe5019e29b4
  $tc'C:FindById :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5040402865881264499##
                   17217640033764757218##
                   Main.$trModule
                   Main.$tc'C:FindById2
                   1#
                   Main.$tc'C:FindById1) -}
615a543287d50c04c8bbb9d6dacd314e
  $tc'C:FindById1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1a84612b6a76fdce305a9a3e09d7fa19
  $tc'C:FindById2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'C:FindById3) -}
cb4e369dbeb1bdf6f9941f9779ce7af2
  $tc'C:FindById3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:FindById"#) -}
95a9b05fd83196c574589a702ece7b29
  $tc'C:ListAll :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4927577502450411119##
                   5934744062367199215##
                   Main.$trModule
                   Main.$tc'C:ListAll2
                   1#
                   Main.$tc'C:ListAll1) -}
6b3b2eb7b1d6556d73dbda7f417b98b7
  $tc'C:ListAll1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
210b5024e8a1589050cc1fb6bcb4fc9c
  $tc'C:ListAll2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'C:ListAll3) -}
1860c01c507159ef03c53f6d648a77d4
  $tc'C:ListAll3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:ListAll"#) -}
9960b5c5cdb1b4c4021831a72be9b6aa
  $tc'C:Update :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12427377323733170143##
                   6551233747354050029##
                   Main.$trModule
                   Main.$tc'C:Update2
                   1#
                   Main.$tc'C:Update1) -}
6bca5ffe25e3e9efe1800df67461e61c
  $tc'C:Update1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
85cce70dfc54972766938ba6e659b5f5
  $tc'C:Update2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'C:Update3) -}
77df05355fc831394193328515e117d3
  $tc'C:Update3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:Update"#) -}
34c6b736a274f5123da34c5662bd9bba
  $tc'CompetitionSchedules :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5867090715733061859##
                   1046840996442426630##
                   Main.$trModule
                   Main.$tc'CompetitionSchedules1
                   0#
                   Main.$tc'Accounts1) -}
47facdb8f80cc9c677a8d585ff2757ad
  $tc'CompetitionSchedules1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'CompetitionSchedules2) -}
45f88855f0da5c1084c7c5f41ab2cee1
  $tc'CompetitionSchedules2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CompetitionSchedules"#) -}
2b57b9abb377090dfcc83b4d14c18765
  $tc'Competitions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2234095072873109786##
                   13749713884561865895##
                   Main.$trModule
                   Main.$tc'Competitions1
                   0#
                   Main.$tc'Accounts1) -}
14459bdf609e3390de153e9ae1744cc0
  $tc'Competitions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Competitions2) -}
7e789b17ee52acd1f6f4e447bc1cf252
  $tc'Competitions2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Competitions"#) -}
5fd01bee3e50c99f23c1ec01535a697d
  $tc'Participations :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5569033282732623235##
                   15996981839323770543##
                   Main.$trModule
                   Main.$tc'Participations1
                   0#
                   Main.$tc'Accounts1) -}
2a5e7fbb352274ee5e0452c737cbc082
  $tc'Participations1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Participations2) -}
7041e44d8b3830ce38d05ef185d90899
  $tc'Participations2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Participations"#) -}
dda80108d0aceb29dd51ba1d817a447b
  $tc'SportSectionSchedules :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7383442917079166932##
                   14880533617164004032##
                   Main.$trModule
                   Main.$tc'SportSectionSchedules1
                   0#
                   Main.$tc'Accounts1) -}
c13ac49bd85b912fc35107f79941c68e
  $tc'SportSectionSchedules1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'SportSectionSchedules2) -}
b31f201edc8f6a3cfbc9644a67b05ca1
  $tc'SportSectionSchedules2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SportSectionSchedules"#) -}
5551bfbe7a885f96be966fddbdf967b3
  $tc'SportSections :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14782009491384176326##
                   6943640577639018264##
                   Main.$trModule
                   Main.$tc'SportSections1
                   0#
                   Main.$tc'Accounts1) -}
95b64746e0a0be1235365f6d524833a5
  $tc'SportSections1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'SportSections2) -}
0c83b89e6157cd57fb8cbc0510e8437e
  $tc'SportSections2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SportSections"#) -}
e68a800a17a2086836bcff7c5acc76c9
  $tcCreate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9601946304854132072##
                   5877532020107857197##
                   Main.$trModule
                   Main.$tcCreate2
                   0#
                   Main.$tcCreate1) -}
20d332b216a7622e091d466a0276bfdd
  $tcCreate1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
94b9f950e60eda049d7f458c10c111ee
  $tcCreate2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCreate3) -}
015717fc59cb559e245682ce9072eaa1
  $tcCreate3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Create"#) -}
bc7d1b80d7c724cab9928aebe0e172a1
  $tcDelete :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   471727108747614466##
                   2472717108366497886##
                   Main.$trModule
                   Main.$tcDelete1
                   0#
                   Main.$tcCreate1) -}
f917e6b4a5af068514333d0b84f548d7
  $tcDelete1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcDelete2) -}
9397d3649be3854db4816e61db1ab078
  $tcDelete2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Delete"#) -}
549bcb97fd2cbb86f6cc863702dff690
  $tcFindById :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18287541204947698821##
                   3193572833491075420##
                   Main.$trModule
                   Main.$tcFindById1
                   0#
                   Main.$tcCreate1) -}
5b2ae14862073fec0092a26875ab9927
  $tcFindById1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcFindById2) -}
c696effadf2dc9ce797f1c55d1c39c74
  $tcFindById2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FindById"#) -}
0db70ae595f84cfe16680fba6e8622b7
  $tcListAll :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13196646909723474536##
                   14931160236415276157##
                   Main.$trModule
                   Main.$tcListAll1
                   0#
                   Main.$tcCreate1) -}
f5d6a3f12bc12b894eb32f64e3b46c3f
  $tcListAll1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcListAll2) -}
00d0875db2b2dca34d4850bb4d88088e
  $tcListAll2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ListAll"#) -}
fef33e0f2e16f4225038ade6ba27d850
  $tcTableName :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4704960985957983433##
                   3357395818595482132##
                   Main.$trModule
                   Main.$tcTableName1
                   0#
                   GHC.Types.krep$*) -}
6be18174a9e81ace7e2f4ba3f60bc687
  $tcTableName1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcTableName2) -}
ee88bcc273980b632576490e33b4c66f
  $tcTableName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TableName"#) -}
d884fa203eae6a24a907bc4a6b828530
  $tcUpdate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15277169930666052911##
                   7470660753280062870##
                   Main.$trModule
                   Main.$tcUpdate1
                   0#
                   Main.$tcCreate1) -}
47b1fa244d0771470b07be49ac38a2e8
  $tcUpdate1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcUpdate2) -}
381eb8d99edcc733bd9fcab258acc1a2
  $tcUpdate2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Update"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
ac30d998f4c7e8de2319e7d0be585360
  $w$ccreateRow ::
    Main.TableName
    -> [[GHC.Types.Char]]
    -> GHC.Types.IO
         (GHC.Maybe.Maybe Database.MySQL.Protocol.Packet.Packet)
    -> (Database.MySQL.Protocol.Packet.Packet -> GHC.Types.IO ())
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.MySQL.Protocol.Packet.OK #)
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(U(U,1*U))><C(C(S(SL))),C(C1(U(U,A)))><S,U><S,U>,
     Inline: [2] -}
2ba5322bb2c3165690881c543a89a3fe
  $w$cdeleteRow ::
    Main.TableName
    -> [GHC.Types.Char]
    -> GHC.Types.IO
         (GHC.Maybe.Maybe Database.MySQL.Protocol.Packet.Packet)
    -> (Database.MySQL.Protocol.Packet.Packet -> GHC.Types.IO ())
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.MySQL.Protocol.Packet.OK #)
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(U(U,1*U))><C(C(S(SL))),C(C1(U(U,A)))><S,U><S,U>,
     Inline: [2] -}
8b28114ec7b88be72e4c59be0f48d23e
  $w$cfindById ::
    Main.TableName
    -> [GHC.Types.Char]
    -> GHC.Types.IO
         (GHC.Maybe.Maybe Database.MySQL.Protocol.Packet.Packet)
    -> (Database.MySQL.Protocol.Packet.Packet -> GHC.Types.IO ())
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Database.MySQL.Protocol.ColumnDef.ColumnDef],
           System.IO.Streams.Internal.InputStream
             [Database.MySQL.Protocol.MySQLValue.MySQLValue]) #)
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(U(U,1*U))><C(C(S(SL))),C(C1(U(U,A)))><S,U><S,U>,
     Inline: [2] -}
9c84123e78aaaf4e32ae04c1348001a3
  $w$clistAll ::
    Main.TableName
    -> GHC.Types.IO
         (GHC.Maybe.Maybe Database.MySQL.Protocol.Packet.Packet)
    -> (Database.MySQL.Protocol.Packet.Packet -> GHC.Types.IO ())
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Database.MySQL.Protocol.ColumnDef.ColumnDef],
           System.IO.Streams.Internal.InputStream
             [Database.MySQL.Protocol.MySQLValue.MySQLValue]) #)
  {- Arity: 5,
     Strictness: <S,1*U><L,C(U(U,1*U))><C(C(S(SL))),C(C1(U(U,A)))><S,U><S,U>,
     Inline: [2],
     Unfolding: (\ (w72 :: Main.TableName)
                   (ww :: GHC.Types.IO
                            (GHC.Maybe.Maybe Database.MySQL.Protocol.Packet.Packet))
                   (ww1 :: Database.MySQL.Protocol.Packet.Packet -> GHC.Types.IO ())
                   (ww2 :: GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool)
                   (w73 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w72 of wild {
                   Main.Accounts
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName26
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73
                   Main.SportSections
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName22
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73
                   Main.Competitions
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName18
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73
                   Main.SportSectionSchedules
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName14
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73
                   Main.CompetitionSchedules
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName10
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73
                   Main.Affiliations
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName6
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73
                   Main.Participations
                   -> Database.MySQL.Base.$wquery_
                        ww
                        ww1
                        ww2
                        Main.$fListAllTableName2
                          `cast`
                        (Nth:3
                             (<GHC.Base.String>_R ->_R Sym (Database.MySQL.Query.N:Query[0])))
                        w73 }) -}
00a84c7e59b59c614c522ff4ec00d532
  $w$cupdateRow ::
    Main.TableName
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> GHC.Types.IO
         (GHC.Maybe.Maybe Database.MySQL.Protocol.Packet.Packet)
    -> (Database.MySQL.Protocol.Packet.Packet -> GHC.Types.IO ())
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Database.MySQL.Protocol.Packet.OK #)
  {- Arity: 8,
     Strictness: <S,1*U><S,U><L,1*U><L,U><L,C(U(U,1*U))><C(C(S(SL))),C(C1(U(U,A)))><S,U><S,U>,
     Inline: [2] -}
a4dd94e976a9e399206d4471acabc4bc
  $wpoly_step ::
    [GHC.Types.Char]
    -> (Data.ByteString.Builder.Internal.BufferRange
        -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,U><L,U><S,U>, Inline: [2] -}
3fb605b48213c2fe6ed336a532cb3db6
  class Create a where
    createRow :: a
                 -> [[GHC.Types.Char]]
                 -> Database.MySQL.Connection.MySQLConn
                 -> GHC.Types.IO Database.MySQL.Protocol.Packet.OK
    {-# MINIMAL createRow #-}
14a5f8b5d20530e6efa5e16065a795e1
  class Delete a where
    deleteRow :: a
                 -> [GHC.Types.Char]
                 -> Database.MySQL.Connection.MySQLConn
                 -> GHC.Types.IO Database.MySQL.Protocol.Packet.OK
    {-# MINIMAL deleteRow #-}
f7b34e4af888952fee03805e99f9266f
  class FindById a where
    findById :: a
                -> [GHC.Types.Char]
                -> Database.MySQL.Connection.MySQLConn
                -> GHC.Types.IO
                     ([Database.MySQL.Protocol.ColumnDef.ColumnDef],
                      System.IO.Streams.Internal.InputStream
                        [Database.MySQL.Protocol.MySQLValue.MySQLValue])
    {-# MINIMAL findById #-}
76ec48c2239fc128311c5097fff039b3
  class ListAll a where
    listAll :: a
               -> Database.MySQL.Connection.MySQLConn
               -> GHC.Types.IO
                    ([Database.MySQL.Protocol.ColumnDef.ColumnDef],
                     System.IO.Streams.Internal.InputStream
                       [Database.MySQL.Protocol.MySQLValue.MySQLValue])
    {-# MINIMAL listAll #-}
c3d5736012f1c0ee19c767cd660eabe7
  data TableName
    = Accounts
    | SportSections
    | Competitions
    | SportSectionSchedules
    | CompetitionSchedules
    | Affiliations
    | Participations
d54a5a58b1073989305b7110ecf9bc03
  class Update a where
    updateRow :: a
                 -> [GHC.Types.Char]
                 -> [GHC.Types.Char]
                 -> [GHC.Types.Char]
                 -> Database.MySQL.Connection.MySQLConn
                 -> GHC.Types.IO Database.MySQL.Protocol.Packet.OK
    {-# MINIMAL updateRow #-}
b4f9ae97a091b232a88173a93240314d
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
529073e95d7e97cca9b9c5c633464b51
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
3bd27e11144b62cbd3a7a1ae2df73fdc
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
instance Main.Create [Main.TableName] = Main.$fCreateTableName
instance Main.Delete [Main.TableName] = Main.$fDeleteTableName
instance Main.FindById [Main.TableName] = Main.$fFindByIdTableName
instance Main.ListAll [Main.TableName] = Main.$fListAllTableName
instance Main.Update [Main.TableName] = Main.$fUpdateTableName
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

